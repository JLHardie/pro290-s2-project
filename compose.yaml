version: '3.8'
services:

####    INVENTORY SERVICES    ####

  InventoryServiceMongoDB:
    image: mongo:latest
    restart: always
    ports: 
      - "27000:27017"
    networks:
      - ComputerRepairNetwork
    volumes:
      - mongo-storage:/data/db

  InventoryServiceAPI:
    build: ./Inventory/backend/InventoryService
    image: inventoryserviceapi
    restart: always
    networks:
      - ComputerRepairNetwork
    depends_on:
      - InventoryServiceMongoDB
      - EurekaRegistry
    deploy:
      mode: replicated
      replicas: 3

  InventoryFrontend:
    build: ./Inventory/frontend
    image: inventoryfrontend
    restart: always
    ports:
      - 3001:80
    networks:
      - ComputerRepairNetwork
    depends_on:
      - API-Gateway

####    CART SERVICES    ####

  CartServiceRedisDB:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    networks:
      - ComputerRepairNetwork
  
  CartServiceAPI:
    build: ./Cart/backend/CartService
    image: cartserviceapi
    restart: always
    ports:
      - "8080"
    networks:
      - ComputerRepairNetwork
    depends_on:
      - CartServiceRedisDB
      - EurekaRegistry
    deploy:
      mode: replicated
      replicas: 3

  CartFrontend:
    build: ./Cart/frontend
    image: cartfrontend
    restart: always
    ports:
      - 3002:80
    networks:
      - ComputerRepairNetwork
    depends_on:
      - API-Gateway

####    SQL SERVER    ####

  RepairStoreSQLDB:
    build: ./SQL Server
    image: userservicesqldb
    restart: always
    ports:
      - 1433:1433
    networks:
      - ComputerRepairNetwork
    volumes:
      - sql-storage:/var/opt/mssql
    
####    USER SERVICES    ####

  UserServiceAPI:
    build: ./User/backend/UserService
    image: userserviceapi
    restart: always
    ports:
      - 8082:8080
    networks:
      - ComputerRepairNetwork
    depends_on:
      - RepairStoreSQLDB
      - EurekaRegistry

  UserFrontend:
    build: ./User/frontend
    image: userfrontend
    restart: always
    ports:
      - 3006:80
    networks:
      - ComputerRepairNetwork
    depends_on:
      - API-Gateway

####    ORDER SERVICES    ####

  OrderServiceAPI:
    build: ./Order/backend/OrderService
    image: orderserviceapi
    restart: always
    ports:
      - 8083:8080
    networks:
      - ComputerRepairNetwork
    depends_on:
      - RepairStoreSQLDB
      - EurekaRegistry

  OrderFrontend:
    build: ./Order/frontend
    image: orderfrontend
    restart: always
    ports:
      - 3003:80
    networks:
      - ComputerRepairNetwork
    depends_on:
      - API-Gateway

####    TICKET SERVICES    ####

  TicketServiceAPI:
    build: ./Ticket/backend/PRO290TicketServiceAPI
    image: ticketserviceapi
    restart: always
    ports:
      - 8084:8080
    networks:
      - ComputerRepairNetwork
    depends_on:
      - RepairStoreSQLDB
      - EurekaRegistry

####    HOME FRONTEND    ####
  HomeFrontend:
    build: ./Home
    image: homefrontend
    restart: always
    ports:
      - 3000:80
    networks:
      - ComputerRepairNetwork
    depends_on:
      - API-Gateway

####    GENERAL SERVICES    ####
  EurekaRegistry:
    container_name: EurekaRegistry
    image: steeltoeoss/eureka-server:latest
    restart: always
    hostname: EurekaRegistry
    ports:
      - 8761:8761
    networks: 
      - ComputerRepairNetwork

  API-Gateway:
    container_name: api-gateway
    build: ./ApiGateway/API-Gateway
    image: springcloudapigateway
    restart: always
    ports:
      - 8080:8080
    networks:
      - ComputerRepairNetwork
    depends_on:
      - EurekaRegistry
      - CartServiceAPI
      - UserServiceAPI
      - InventoryServiceAPI
      - TicketServiceAPI
      - OrderServiceAPI

  ###    CHAT SERVICES    ###
  ChatFrontend:
    build: ./Chat
    image: chatfrontend
    restart: always
    ports:
      - 3004:80
    networks:
      - ComputerRepairNetwork
    depends_on:
      - API-Gateway
      - RASA

  RASA:
    build: ./Rasa
    image: rasabot
    ports: 
      - 5005:5005
    networks:
      - ComputerRepairNetwork
networks:
  ComputerRepairNetwork: {}
volumes:
  mongo-storage: {}
  sql-storage: {}